package cz.pluscare.resourcegenerator.parser.xml

import cz.pluscare.resourcegenerator.reader.Language
import cz.pluscare.resourcegenerator.reader.ResourceElement
import cz.pluscare.resourcegenerator.extensions.emojiText
import cz.pluscare.resourcegenerator.parser.ResourceParser
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.beans.factory.annotation.Qualifier
import org.springframework.stereotype.Component

@Component
@Qualifier("XmlParser")
class XmlParser @Autowired constructor() : ResourceParser {

    override fun getParsedText(language: Language, values: List<ResourceElement>): XmlText? {
        return if (values.isEmpty()) null
        else XmlText.empty().apply {
            generateXmlVersion()
            generateHeaderComment()
            generateCopyrightComment()
            createResource {
                addLanguageCode(language)
                values.forEach { addResourceElement(it) }
            }
        }
    }

    private fun XmlText.generateXmlVersion() {
        value += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
    }

    private fun XmlText.generateHeaderComment() {
        value += "<!-- WARNING: Autogenerated file -->\n"
    }

    private fun XmlText.generateCopyrightComment() {
        val emoji = emojiText(0x1F1E8, 0x1F1FF)
        value += "<!-- Generated by $emoji Â© Plus Care s.r.o. -->\n"
    }

    private fun XmlText.createResource(block: () -> Unit) {
        value += "<resources>\n"
        block()
        value += "</resources>"
    }

    private fun XmlText.addLanguageCode(language: Language) {
        value += "\t<string name=\"lang_code\">${language.code}</string>\n"
    }

    private fun XmlText.addResourceElement(element: ResourceElement) {
        value += "\t<!--  ${element.comment} -->\n"
        value += "\t<string name=\"${element.id}\">${element.value}</string>\n"
    }

}